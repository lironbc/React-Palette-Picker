{"version":3,"sources":["bg.svg","sizes.js","ColorBox.js","Navbar.js","Palette.js","MiniPalette.js","PaletteList.js","seedColors.js","PaletteMetaForm.js","DraggableColorBox.js","DraggableColorList.js","NewPaletteForm.js","colorHelpers.js","SingleColorPalette.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","size","xs","sm","md","lg","styles","colorBox","width","height","props","activeMore","margin","display","position","cursor","marginTop","sizes","ColorBox","state","copied","expandAnimation","bind","this","setState","setTimeout","copyClass","isDarkColor","chroma","color","luminance","isLightColor","text","onCopy","className","classes","style","background","name","to","paletteId","id","onClick","e","stopPropagation","Component","withStyles","logo","marginRight","padding","fontSize","fontFamily","alignItems","textDecoration","slider","Navbar","activeSlider","level","defaultValue","min","max","step","onAfterChange","handleSliderChange","Select","value","format","onChange","handleFormatChange","MenuItem","defaultProps","Palette","newLevel","target","colors","palette","map","item","key","paletteName","MiniPalette","handleClick","deletePalette","miniColorBoxes","backgroundColor","root","deleteIcon","title","borderRadius","overflow","opacity","justifyContent","paddingTop","marginBottom","right","top","zIndex","transition","palettes","length","overflowY","flexWrap","backgroundImage","bg","container","flexDirection","boxSizing","gridTemplateColumns","gridGap","nav","PaletteList","goToPalette","history","push","TransitionGroup","CSSTransition","classNames","timeout","emoji","useStyles","makeStyles","theme","navBtn","withRouter","useEffect","ValidatorForm","addValidationRule","every","toLowerCase","React","useState","open","setOpen","curPaletteName","updatePaletteName","handleClose","hide","Dialog","onClose","aria-labelledby","DialogTitle","onSubmit","newPalette","replace","savePalette","DialogContent","DialogContentText","fullWidth","label","validators","errorMessages","DialogActions","Button","variant","button","type","transform","left","bottom","DraggableColorBox","SortableElement","removeColor","DraggableColorList","SortableContainer","i","index","textDecorationStyle","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","spacing","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","textAlign","chromePicker","addButton","colorInput","buttons","link","NewPaletteForm","curColor","useTheme","setColor","seedColors","updateColors","curName","updateName","showing","showForm","pickRandomColor","colorPicked","arrayToPick","Math","floor","random","array","isDuplicateColor","some","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","goBack","join","Drawer","anchor","paper","Divider","List","disabled","onChangeComplete","newColor","hex","instantValidate","newColors","filter","axis","onSortEnd","oldIndex","newIndex","arrayMove","distance","levels","generatePalette","starterPalette","hexColor","numberOfColors","scale","darken","getRange","mode","reverse","rgb","css","rgba","SingleColorPalette","outline","lineHeight","textTransform","border","_shades","gatherShades","shades","c","colorId","slice","colorBoxes","App","savedPalettes","JSON","parse","window","localStorage","getItem","findPalette","find","syncLocalStorage","st","setItem","stringify","render","location","exact","path","routeProps","match","params","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfe9b589.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.abc613a5.svg\";","export default{\r\n    up(){\r\n\r\n    },\r\n\r\n    down(size){\r\n        const sizes = {\r\n            xs : \"575.98px\",\r\n            sm : \"767.98px\",\r\n            md : \"991.98px\",\r\n            lg : \"1199.98px\"\r\n        }\r\n        return `@media (max-width: ${sizes[size]})`\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './ColorBox.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport chroma from 'chroma-js';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport sizes from './sizes';\r\n\r\nconst styles = {\r\n    colorBox : {\r\n        width : \"20%\",\r\n        height : props => props.activeMore ? \"25%\" : \"50%\",\r\n        margin: \"0 auto\",\r\n        display : \"inline-block\",\r\n        position: \"relative\",\r\n        cursor: \"pointer\",\r\n        marginTop : \"-4.5px\",\r\n\r\n        [sizes.down(\"lg\")] : {\r\n            width : \"25%\",\r\n            height : props => props.activeMore ? \"20%\" : \"33.3%\"\r\n        },\r\n\r\n        [sizes.down(\"md\")] : {\r\n            width : \"50%\",\r\n            height : props => props.activeMore ? \"10%\" : \"20%\"\r\n        },\r\n\r\n        [sizes.down(\"xs\")] : {\r\n            width : \"100%\",\r\n            height : props => props.activeMore ? \"5%\" : \"10%\"\r\n        }\r\n    }\r\n}\r\n\r\nclass ColorBox extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            copied : false //tracks if copy animation should be playing\r\n        };\r\n\r\n        this.expandAnimation = this.expandAnimation.bind(this);\r\n    }\r\n\r\n    /* Used to add a class for 1500 milliseconds so an animation can play\r\n       during that time. */ \r\n    expandAnimation(){\r\n        this.setState({copied : true},\r\n            () => setTimeout(() => this.setState({copied : false}), 1500));\r\n    }\r\n\r\n    render() {\r\n        const copyClass = this.state.copied ? \"copy-animation copied\" : \"copy-animation\";\r\n\r\n        /*check brightness of background to determine if text should be black/white for\r\n          better contrast*/\r\n        const isDarkColor = chroma(this.props.color).luminance() < .15;\r\n        const isLightColor = chroma(this.props.color).luminance() >= .6;\r\n        return (\r\n            /* on a click, the text copied to clipboard is the color. This is passed down\r\n               in hex, rgb, or rgba formats */\r\n            <CopyToClipboard text={this.props.color} onCopy={this.expandAnimation}>\r\n            <div className={this.props.classes.colorBox} style={{background : this.props.color}}>\r\n                {/* Div with the same color that will expand while color is being copied\r\n                    to give the illusion that the background color takes up entire background */}\r\n                <div className={copyClass} style={{background : this.props.color}}></div>\r\n                <div className=\"box-content\">\r\n                    <span className={isDarkColor ? \"light-txt\" : \"\"}>{this.props.name}</span>\r\n                </div>\r\n                \r\n                    <button className={isLightColor ? \"copy-btn dark-txt dark-background\" :\r\n                                             \"copy-btn\"}>\r\n                        Copy\r\n                    </button>\r\n                \r\n                {/* only render More button in multi color palette */}\r\n                {this.props.activeMore &&\r\n                <Link to={`/palette/${this.props.paletteId}/${this.props.id}`} \r\n                onClick={e => e.stopPropagation()}>\r\n\r\n                    <div className=\"see-more\">\r\n                        <span className={isLightColor ? \"see-more dark-txt\" : \"\"}>More</span>\r\n                    </div>\r\n                </Link>\r\n                }\r\n\r\n                {/* Render the word Copied! and the color copied while the copy animation\r\n                    is active */}\r\n                {this.state.copied && \r\n                    <div className=\"copy-msg\">\r\n                        <h1>Copied!</h1> \r\n                        <p className={isLightColor ? \"dark-txt\" : null}>\r\n                            {this.props.color}\r\n                        </p>\r\n                    </div> }\r\n            </div>\r\n            </CopyToClipboard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox);\r\n","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {Link} from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport 'rc-slider/assets/index.css';\r\nimport './Navbar.css';\r\nimport sizes from './sizes';\r\n\r\nconst styles = {\r\n    \r\n    logo : {\r\n        marginRight: \"15px\",\r\n        padding: \"0 13px\",\r\n        fontSize: \"18px\",\r\n        background: \"#eceff1\",\r\n        fontFamily: \"Roboto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems : \"center\",\r\n        \"& a\" : {\r\n            textDecoration: \"none\",\r\n            color: \"black\"\r\n        },\r\n\r\n        [sizes.down(\"xs\")] : {\r\n            display : \"none\"\r\n        }\r\n    },\r\n    slider : {\r\n        width: \"340px\",\r\n        display: \"inline-block\",\r\n        padding: \"0 10px\",\r\n\r\n        [sizes.down(\"sm\")] : {\r\n            width : \"150px\"\r\n        }\r\n    }\r\n}\r\n\r\nclass Navbar extends Component {\r\n    static defaultProps = {format : \"hex\"};\r\n    render() {\r\n        return (\r\n            <div className=\"Navbar\">\r\n                <div className={this.props.classes.logo}>\r\n                    {/* Logo brings you back to home */}\r\n                    <Link to=\"/\">PALETTE PICKER</Link>\r\n                </div>\r\n\r\n                {/* Slider only shows when not in more tab */}\r\n                {this.props.activeSlider &&\r\n                <div className=\"slider-container\">\r\n                    <span>Level {this.props.level}</span>\r\n                    <div className={this.props.classes.slider}>\r\n                        <Slider defaultValue={this.props.level}\r\n                            min={100}\r\n                            max={900}\r\n                            step={100}\r\n                            // updates which colors are shown\r\n                            onAfterChange={this.props.handleSliderChange} />\r\n                    </div>\r\n                </div>\r\n                }\r\n                <div className=\"select-container\">\r\n                        <Select value={this.props.format} \r\n                        onChange={this.props.handleFormatChange}>\r\n                            <MenuItem value=\"hex\">Hex - #ffffff</MenuItem>\r\n                            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n                            <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);","import React, { Component } from 'react';\r\nimport ColorBox from './ColorBox';\r\nimport './Palette.css';\r\nimport Navbar from './Navbar';\r\n\r\nclass Palette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            level : 500,\r\n            format : \"hex\"\r\n        };\r\n\r\n        this.handleSliderChange = this.handleSliderChange.bind(this);\r\n        this.handleFormatChange = this.handleFormatChange.bind(this);\r\n    }\r\n\r\n    /* Used to update which colors are shown depending on the slider\r\n       position */\r\n    handleSliderChange(newLevel){\r\n        this.setState({level : newLevel});\r\n    }\r\n\r\n    /* sets the text of the dropdown menu in the top right\r\n        to display the chosen format : hex/rgb/rgba */\r\n    handleFormatChange(e){\r\n        this.setState({format : e.target.value});\r\n    }\r\n\r\n    render() {\r\n        let colors = this.props.palette.colors[this.state.level].map(\r\n            item => {\r\n            return <ColorBox color={item[this.state.format]}\r\n                        name={item.name} \r\n                        key={item.name}\r\n                        paletteId={this.props.palette.id}\r\n                        id={item.id}\r\n                        activeMore={true}\r\n                        />\r\n            }\r\n        );\r\n        return (\r\n            <div className=\"Palette\">\r\n                <Navbar level={this.state.level} \r\n                handleSliderChange={this.handleSliderChange}\r\n                handleFormatChange={this.handleFormatChange}\r\n                format={this.state.format}\r\n                activeSlider={true} />\r\n\r\n                <div className=\"Palette-colors\">\r\n                    {colors}\r\n                </div>\r\n\r\n                <footer className=\"Palette-footer\">\r\n                    {this.props.palette.paletteName}\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Palette;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst styles = {\r\n    root : {\r\n        backgroundColor : \"white\",\r\n        borderRadius : \"5px\",\r\n        padding : \"0.5rem\",\r\n        position : \"relative\",\r\n        overflow : \"hidden\",\r\n        cursor : \"pointer\",\r\n        \"&:hover svg\" : {\r\n            opacity : 1\r\n        }\r\n    },\r\n\r\n    colors : {\r\n        backgroundColor : \"#dae134\",\r\n        width : \"100%\",\r\n        height: \"150px\",\r\n        borderRadius : \"5px\",\r\n        overflow : \"hidden\"\r\n    },\r\n\r\n    title : {\r\n        display : \"flex\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n        margin : \"0\",\r\n        color : \"black\",\r\n        paddingTop : \"0.5rem\",\r\n        fontSize : \"1rem\",\r\n        position : \"relative\"\r\n    },\r\n\r\n    miniColorBoxes : {\r\n        height: \"25%\",\r\n        width: \"20%\",\r\n        display: \"inline-block\",\r\n        margin : \"0 auto\",\r\n        position : \"relative\",\r\n        marginBottom : \"-4px\"\r\n    },\r\n\r\n    deleteIcon : {\r\n        color : \"white\",\r\n        backgroundColor : \"#eb4034\",\r\n        width : \"20px\",\r\n        height : \"20px\",\r\n        position : \"absolute\",\r\n        right : \"0px\",\r\n        top : \"0px\",\r\n        padding : \"5px\",\r\n        borderRadius : \"15%\",\r\n        zIndex : 10,\r\n        opacity : 0,\r\n        transition : \"all 0.15s ease-in-out !important\"\r\n    }\r\n}\r\n\r\nclass MiniPalette extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.deletePalette = this.deletePalette.bind(this);\r\n    }\r\n\r\n    handleClick(){\r\n        this.props.handleClick(`palette/${this.props.id}`);\r\n    }\r\n\r\n    deletePalette(e){\r\n        e.stopPropagation();\r\n        this.props.deletePalette(this.props.id);\r\n    }\r\n\r\n    render(){\r\n        const miniColorBoxes = this.props.colors.map(color => \r\n            <div \r\n            className={this.props.classes.miniColorBoxes} \r\n            style={{backgroundColor : color.color}}\r\n            key={color.name}></div>);\r\n\r\n        return (\r\n        <div className={this.props.classes.root} onClick={this.handleClick}>\r\n            <DeleteIcon className={this.props.classes.deleteIcon}\r\n            onClick={this.deletePalette}/>\r\n            <div className={this.props.classes.colors}>\r\n                {miniColorBoxes}\r\n            </div>\r\n            <h5 className={this.props.classes.title}>\r\n                {this.props.paletteName}\r\n            </h5>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}  \r\n\r\n\r\nexport default withStyles(styles)(MiniPalette);","import React, { Component } from 'react';\r\nimport MiniPalette from './MiniPalette';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {Link} from 'react-router-dom';\r\nimport sizes from './sizes';\r\nimport bg from './bg.svg';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\n\r\nconst styles = {\r\n    \"@global\" : {\r\n        \".fade-exit\" : {\r\n            opacity : 1\r\n        },\r\n        \".fade-exit-active\" : {\r\n            opacity : 0,\r\n            transition : \"opacity 500ms ease-in\"\r\n        },\r\n    },\r\n    root : props => ({\r\n        height : props.palettes.length > 6 ? \"100%\" : \"100vh\",\r\n        overflowY: \"scroll\",\r\n        display : \"flex\",\r\n        alignItems : \"flex-start\",\r\n        justifyContent : \"center\",\r\n        flexWrap : \"wrap\",\r\n        backgroundColor : \"#008BAA\",\r\n        backgroundImage : `url(${bg})`,\r\n        [sizes.down(\"sm\")] : {\r\n            height : props.palettes.length > 4 ? \"100% !important\" : \"100vh !important\" \r\n        }\r\n\r\n    }),\r\n\r\n    container : {\r\n        width : \"50%\",\r\n        display : \"flex\",\r\n        alignItems : \"flex-start\",\r\n        flexDirection : \"column\",\r\n        flexWrap : \"wrap\",\r\n        [sizes.down(\"lg\")] : {\r\n            width : \"70%\"\r\n        }\r\n    },\r\n\r\n    MiniPalette : {\r\n        boxSizing : \"border-box\",\r\n        width : \"100%\",\r\n        display : \"grid\",\r\n        gridTemplateColumns : \"repeat(3, 33%)\",\r\n        gridGap : \"1.5rem\",\r\n        [sizes.down(\"sm\")] : {\r\n            gridTemplateColumns : \"repeat(2, 50%)\"\r\n        }, \r\n        [sizes.down(\"xs\")] : {\r\n            gridTemplateColumns : \"repeat (1, 100%)\"\r\n        }\r\n    },\r\n\r\n    nav : {\r\n        display : \"flex\",\r\n        color : \"white\",\r\n        width : \"100%\",\r\n        justifyContent : \"space-between\",\r\n        alignItems : \"center\",\r\n        \"& a\" : {\r\n            color: \"white\"\r\n        }\r\n    }\r\n}\r\nclass PaletteList extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.goToPalette = this.goToPalette.bind(this);\r\n    }\r\n    \r\n    /* redirects to a new route based on the palette clicked on.\r\n       allows for user to click back button to get back to main\r\n       page */\r\n    goToPalette(id){\r\n        this.props.history.push(id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.classes.root} >\r\n            {/* // style={palettesLength >= 7 ? {height : \"100%\"} : {height : \"100vh\"}}> */}\r\n                <div className={this.props.classes.container}>\r\n                    <nav className={this.props.classes.nav}>\r\n                        <h1>React Colors</h1>\r\n                        <Link to=\"/palette/new\">Create New Palette</Link>\r\n                    </nav>\r\n                \r\n                        <TransitionGroup className={this.props.classes.MiniPalette}>\r\n                            {this.props.palettes.map(\r\n                                (palette) =>\r\n                                    <CSSTransition key={palette.id} \r\n                                    classNames=\"fade\"\r\n                                    timeout={500}>\r\n                                        <MiniPalette {...palette} \r\n                                        key={palette.paletteName}\r\n                                        deletePalette={this.props.deletePalette} \r\n                                        handleClick={this.goToPalette} />\r\n                                    </CSSTransition>\r\n                            )}\r\n                        </TransitionGroup>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(styles)(PaletteList);","export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"🎨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"🤙\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"🇳🇱\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"🇺🇸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"🇦🇺\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"🇬🇧\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"🇪🇸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"🇮🇳\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"🇫🇷\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    navBtn: {\r\n        \"& button\" : {\r\n            margin : \"10px\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\"\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst PaletteMetaForm = props => {\r\n\r\n    useEffect(() => {\r\n    ValidatorForm.addValidationRule('isPaletteNameUnique', (value) =>\r\n        props.palettes.every((palette) => \r\n            value.toLowerCase() !== palette.paletteName.toLowerCase()\r\n        ), [])\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(props.open);\r\n    const [curPaletteName, updatePaletteName] = React.useState('');\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      props.hide();\r\n    };\r\n\r\n    function handlePaletteChange(e){\r\n        updatePaletteName(e.target.value);\r\n    }\r\n\r\n    function addNewPalette(){\r\n        let newName = curPaletteName;\r\n        const newPalette = {\r\n            paletteName : newName,\r\n            id : newName.toLowerCase().replace(/ /g, \"-\"),\r\n            colors : props.colors\r\n        }\r\n  \r\n        props.savePalette(newPalette);\r\n        props.history.push(\"/\");\r\n    }\r\n  \r\n    return (\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">New Palette Name</DialogTitle>\r\n          <ValidatorForm onSubmit={addNewPalette}>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please enter a name for your new beautiful palette. Make sure it's unique!\r\n            </DialogContentText>\r\n            \r\n                <TextValidator\r\n                fullWidth\r\n                label=\"Palette Name\"\r\n                value={curPaletteName}\r\n                onChange={handlePaletteChange}\r\n                validators={[\"required\", \"isPaletteNameUnique\"]}\r\n                errorMessages={[\"Enter palette name\", \"Name already used\"]}\r\n                />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <div className={classes.navBtn}>\r\n                <Button variant=\"contained\" \r\n                color=\"secondary\" \r\n                className={classes.button}\r\n                type=\"submit\">\r\n                    Add new palette\r\n                </Button>\r\n            </div>\r\n          </DialogActions>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n    );\r\n  }\r\n\r\nexport default withRouter(PaletteMetaForm);","import React from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {SortableElement} from 'react-sortable-hoc';\r\nimport sizes from './sizes';\r\nimport chroma from 'chroma-js';\r\n\r\nconst styles = {\r\n    root : {\r\n        width : \"20%\",\r\n        height : \"23%\",\r\n        margin: \"0 auto\",\r\n        display : \"inline-block\",\r\n        position: \"relative\",\r\n        cursor: \"pointer\",\r\n        marginTop : \"-6px\",\r\n        \"&:hover svg\":{\r\n            color: \"white\",\r\n            transform : \"scale(1.5)\"\r\n        },\r\n        [sizes.down(\"lg\")] : {\r\n            width : \"25%\",\r\n            height : \"18.5%\"\r\n        },\r\n        [sizes.down(\"md\")] : {\r\n            width : \"50%\",\r\n            height : \"9.3%\"\r\n        },\r\n        [sizes.down(\"sm\")] : {\r\n            width : \"100%\",\r\n            height : \"5%\"\r\n        }\r\n    },\r\n\r\n    name : {\r\n        position : \"absolute\",\r\n        left : \"0%\",\r\n        bottom : \"0%\",\r\n        padding : \"5px\",\r\n        fontSize : \".8rem\",\r\n        color : props => \r\n        chroma(props.color).luminance() <= 0.08\r\n        ? \"rgba(255,255,255,0.8)\"\r\n        : \"rbga(0,0,0,0.6)\",\r\n    },\r\n\r\n    deleteIcon : {\r\n        position : \"absolute\",\r\n        right : \"0%\",\r\n        padding : \"5px\",\r\n        fontSize : \"2rem\",\r\n        bottom : \"0%\",\r\n        color : \"rgba(0,0,0,0.5)\",\r\n        transition : \"all 0.3s ease-in-out\"\r\n    }\r\n};\r\n\r\nconst DraggableColorBox = SortableElement((props) => {\r\n\r\n    function removeColor(){\r\n        props.removeColor(props.name);\r\n    }\r\n\r\n    return (\r\n        <div className={props.classes.root}\r\n        style={{backgroundColor : props.color}}>\r\n            <div>\r\n                <span className={props.classes.name}>{props.name}</span>\r\n                <DeleteIcon \r\n                className={props.classes.deleteIcon}\r\n                onClick={removeColor} />\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default withStyles(styles)(DraggableColorBox);\r\n","import React from 'react';\r\nimport DraggableColorBox from './DraggableColorBox';\r\nimport {SortableContainer} from 'react-sortable-hoc';\r\nimport sizes from './sizes';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = {\r\n    root : {\r\n        height : \"98.5%\"\r\n    },\r\n    [sizes.down(\"xs\")] : {\r\n        height : \"90%\"\r\n    }\r\n}\r\n\r\nconst DraggableColorList = SortableContainer((props) =>{\r\n    return (\r\n        <div className={props.classes.root}>\r\n        {props.colors.map((color, i) => <DraggableColorBox \r\n        index={i}\r\n        color={color.color} \r\n        key={color.name}\r\n        name={color.name}\r\n        removeColor={props.removeColor} />)}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default withStyles(styles)(DraggableColorList);","import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport {Link} from 'react-router-dom';\r\nimport PaletteMetaForm from './PaletteMetaForm';\r\nimport DraggableColorList from './DraggableColorList';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { ChromePicker } from 'react-color';\r\nimport Button from '@material-ui/core/Button';\r\nimport arrayMove from 'array-move';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport sizes from './sizes';\r\nimport seedColors from './seedColors';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    textDecoration : \"none\",\r\n    textDecorationStyle : \"none\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    flexDirection : \"row\",\r\n    justifyContent : \"space-between\",\r\n    alignItems : \"center\",\r\n    height : \"64px\",\r\n    [sizes.down(\"sm\")] : {\r\n      height : \"60px\"\r\n    },\r\n\r\n    [sizes.down(\"xs\")]  : {\r\n      height : \"50px\"\r\n    }\r\n\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    display : \"flex\",\r\n    alignItems : \"center\"\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    width : \"100%\",\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: 0,\r\n    height : \"100vh\",\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n\r\n  navBtn: {\r\n      marginRight : \"1rem\",\r\n        \"& button\" : {\r\n            margin : \"0 0.5rem\",\r\n            justifyContent : \"center\",\r\n            alignItems : \"center\"\r\n        }\r\n    },\r\n\r\n  container : {\r\n      width : \"90%\",\r\n      height : \"80%\",\r\n      display : \"flex\",\r\n      // marginTop : \"1rem\",\r\n      flexDirection : \"column\",\r\n      justifyContent : \"center\",\r\n      alignItems : \"center\",\r\n      textAlign : \"center\"\r\n  },\r\n\r\n  chromePicker : {\r\n      width : \"100% !important\",\r\n      marginTop : \".5rem\"\r\n  },\r\n\r\n  addButton : {\r\n      width : \"100%\",\r\n      padding : \".2rem\",\r\n      marginTop : \".2rem\",\r\n      fontSize : \"1rem\"\r\n  },\r\n\r\n  colorInput : {\r\n      width : \"100%\",\r\n      height : \"70px\"\r\n  },\r\n\r\n  buttons : {\r\n    width : \"100%\",\r\n    marginTop : \"1rem\"\r\n  },\r\n\r\n  button : {\r\n    width : \"40%\"\r\n  },\r\n\r\n  link : {\r\n    textDecoration : \"none\"\r\n  }\r\n}));\r\n\r\nconst NewPaletteForm = props => {\r\n    const MAX_NUM_COLORS = 20;\r\n\r\n    useEffect( () =>\r\n    ValidatorForm.addValidationRule('isColorNameUnique', (value) =>\r\n        colors.every((item) => \r\n            value.toLowerCase() !== item.name.toLowerCase() \r\n        ), []),\r\n\r\n    ValidatorForm.addValidationRule('isColorUnique', (value) =>\r\n    colors.every((item) => \r\n        curColor !== item.color\r\n    ), []),\r\n\r\n    ValidatorForm.addValidationRule('isNotEmpty', () =>\r\n    props.palettes.every(palette => palette.colors.length !== 0), [])\r\n        \r\n    );\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [curColor, setColor] = React.useState('teal');\r\n  const [colors, updateColors] = React.useState(seedColors[0].colors);\r\n  const [curName, updateName] = React.useState('');\r\n  const [showing, showForm] = React.useState(false);\r\n  \r\n\r\n  function handleDrawerOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleDrawerClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function setNewColor(newColor){\r\n      setColor(newColor.hex);\r\n  }\r\n\r\n  function clearPalette(){\r\n    updateColors([]);\r\n  }\r\n\r\n  function addingNewColor(){\r\n      const newColor = {color : curColor, name : curName}\r\n      updateColors([...colors, newColor]);\r\n      updateName('');\r\n  }\r\n\r\n  function handleChange(e){\r\n      updateName(e.target.value);\r\n  }\r\n\r\n  function removeColor(name){\r\n      let newColors = colors.filter((color) => color.name !== name);\r\n      updateColors(newColors);\r\n  }\r\n\r\n  function addRandomColor(){\r\n      updateColors([...colors, pickRandomColor()])\r\n  }\r\n\r\n  function show(){\r\n      showForm(true);\r\n  }\r\n  function hide(){\r\n      showForm(false);\r\n  }\r\n\r\n  function pickRandomColor(){\r\n      let arrayToPick = Math.floor(Math.random() * seedColors.length);\r\n      let array = seedColors[arrayToPick].colors;\r\n      let isDuplicateColor = true;\r\n      let colorPicked;\r\n      while(isDuplicateColor){\r\n        colorPicked = array[Math.floor(Math.random() * array.length)];\r\n        isDuplicateColor = colors.some(color => color.name === colorPicked.name)\r\n      }\r\n      return colorPicked;\r\n  }\r\n\r\n  const onSortEnd = ({oldIndex, newIndex}) => {\r\n    let newColors = (colors) => arrayMove(colors, oldIndex, newIndex);\r\n    updateColors(newColors);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"default\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Create a palette\r\n          </Typography>\r\n\r\n        </Toolbar>\r\n            <div className={classes.navBtn}>\r\n                <Link to=\"/\" className={classes.link}>\r\n                    <Button variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    className={[classes.button, classes.goBack].join(' ')}>\r\n                        Back\r\n                    </Button>\r\n\r\n                </Link>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={show}>\r\n                Save\r\n                </Button>\r\n            </div>\r\n            \r\n\r\n            \r\n      </AppBar>\r\n\r\n        {showing && \r\n        <PaletteMetaForm\r\n                savePalette={props.savePalette}\r\n                open={showing}\r\n                hide={hide}\r\n                colors={colors}\r\n                palettes={props.palettes}\r\n        />\r\n        }\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div className={classes.container}>\r\n            <List>\r\n                <Typography variant=\"h4\">Design Your Palette</Typography>\r\n\r\n                <span className={classes.buttons}>\r\n                    <Button variant=\"contained\" \r\n                    color=\"secondary\" \r\n                    className={classes.button}\r\n                    onClick={clearPalette}>\r\n                        Clear Palette\r\n                    </Button>\r\n\r\n                    <Button variant=\"contained\" \r\n                    color=\"primary\" \r\n                    className={classes.button}\r\n                    onClick={addRandomColor}\r\n                    disabled={colors.length >= MAX_NUM_COLORS}>\r\n                        Random Color\r\n                    </Button>\r\n                </span>\r\n\r\n                <ChromePicker \r\n                className={classes.chromePicker}\r\n                color={curColor} \r\n                onChangeComplete={setNewColor}/>\r\n\r\n                <ValidatorForm\r\n                 onSubmit={addingNewColor}\r\n                 instantValidate={false}>\r\n                    <TextValidator \r\n                    value={curName}\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    label=\"Color name\"\r\n                    onChange={handleChange}\r\n                    className={classes.colorInput}\r\n                    validators={['required',\r\n                    'isColorNameUnique', \r\n                    'isColorUnique', \r\n                    'isNotEmpty']}\r\n                    errorMessages={['This field is required', \r\n                    'Color name must be unique', \r\n                    'Color already used!',\r\n                    'Palette must not be empty!']}/>\r\n\r\n                    <Button variant=\"contained\" \r\n                    color='primary'\r\n                    className={classes.addButton}\r\n                    style={colors.length >= MAX_NUM_COLORS ? \r\n                        {backgroundColor : \"rgba(0,0,0,.5)\"} :\r\n                        {backgroundColor : curColor} }\r\n                    type=\"submit\"\r\n                    disabled={colors.length >= MAX_NUM_COLORS}\r\n                    >\r\n                        {colors.length >= MAX_NUM_COLORS ? \"Palette Full\" : \"Add Color\"}\r\n                    </Button>\r\n                </ValidatorForm>\r\n            </List>\r\n        </div>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n\r\n        <div className={classes.drawerHeader} />\r\n\r\n        <DraggableColorList\r\n        colors={colors}\r\n        removeColor={removeColor}\r\n        axis=\"xy\"\r\n        onSortEnd={onSortEnd}\r\n        distance={20} />\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewPaletteForm;","import chroma from 'chroma-js';\r\n\r\nlet levels = [50,100,200,300,400,500,600,700,800,900];\r\n\r\nfunction generatePalette(starterPalette){\r\n    let newPalette = {\r\n        paletteName : starterPalette.paletteName,\r\n        id : starterPalette.id,\r\n        emoji : starterPalette.emoji,\r\n        colors : {}\r\n    };\r\n\r\n    // init array for all color levels\r\n    for (let level of levels){\r\n        newPalette.colors[level] = [];\r\n    }\r\n\r\n    for (let color of starterPalette.colors){\r\n        let scale = generateScale(color.color, 10).reverse();\r\n        for(let i in scale){\r\n            newPalette.colors[levels[i]].push({\r\n                name : `${color.name} ${levels[i]}`,\r\n                hex : chroma(scale[i]).hex(),\r\n                //id is color name lowercase with spaces replaced with dashes\r\n                id : color.name.toLowerCase().replace(/ /g, \"-\"),\r\n                //convert our LAB chroma color back to RGB so we can display\r\n                rgb : chroma(scale[i]).css(),\r\n                //generate rgba value by changing end of rgb to have a 1.0 alpha channel\r\n                rgba : chroma(scale[i]).css().replace(\"rgb\", \"rgba\").replace(\")\",\",1.0)\")\r\n            });\r\n        }\r\n    }\r\n    return newPalette;\r\n}\r\n\r\n/* creates an array with black, the color, and white. Chroma can use these\r\n   three numbers to generate a gradient that goes evenly from one end of this\r\n   array to the other*/\r\nfunction getRange(hexColor){\r\n    const end = \"#fff\";\r\n    return[\r\n        chroma(hexColor).darken(1.4).hex(),\r\n        hexColor,\r\n        end\r\n    ];\r\n}\r\n\r\n/* creates an array of colors ranging from very light to very dark\r\n   of a single hue. See chroma-js for additional details on how this\r\n   works but it basically does this : calls getRange(see comment there),\r\n   takes the result and generates a gradient of colors in the LAB color\r\n   format with the scale being distributed around numberOfColors different\r\n   colors */\r\nfunction generateScale(hexColor, numberOfColors){\r\n    return chroma.scale(getRange(hexColor))\r\n          .mode('lab')\r\n          .colors(numberOfColors);\r\n}\r\n\r\nexport { generatePalette }","import React, { Component } from 'react'\r\nimport ColorBox from './ColorBox';\r\nimport Navbar from './Navbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport sizes from './sizes';\r\n\r\nconst styles = {\r\n    SingleColorPalette :{\r\n        \"& colorBox\" : {\r\n            height : \"50%\"\r\n        },\r\n        height: \"100vh\"\r\n    },\r\n\r\n    colorBox : {\r\n        width : \"20%\",\r\n        height : \"50%\",\r\n        margin: \"0 auto\",\r\n        display : \"inline-block\",\r\n        position: \"relative\",\r\n        cursor: \"pointer\",\r\n        marginTop : \"-4.5px\",\r\n        [sizes.down(\"lg\")]: {\r\n            width: \"25%\",\r\n            height: \"33.3333%\"\r\n        },\r\n        [sizes.down(\"md\")]: {\r\n            width: \"50%\",\r\n            height: \"20%\"\r\n        },\r\n\r\n        [sizes.down(\"xs\")] : {\r\n            width : \"100%\",\r\n            height : \"10%\"\r\n        }\r\n    },\r\n\r\n    goBack : {\r\n        backgroundColor : \"black\",\r\n\r\n        \"& a\": {\r\n            color: \"white\",\r\n            width: \"100px\",\r\n            height: \"30px\",\r\n            position: \"absolute\",\r\n            display: \"inline-block\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            marginLeft: \"-50px\",\r\n            marginTop: \"-15px\",\r\n            textAlign: \"center\",\r\n            outline: \"none\",\r\n            background: \"rgba(255, 255, 255, 0.3)\",\r\n            fontSize: \"1rem\",\r\n            lineHeight: \"30px\",\r\n            textTransform: \"uppercase\",\r\n            border: \"none\",\r\n            textDecoration: \"none\"\r\n          }\r\n    }\r\n}\r\n\r\n\r\nclass SingleColorPalette extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { format : \"hex\" } //which format colors are copied in: hex/rgb/rgba\r\n\r\n        this._shades = this.gatherShades();\r\n\r\n        this.handleFormatChange = this.handleFormatChange.bind(this);\r\n    }\r\n\r\n    /* gets each shade of a color from each of the 10 color\r\n       arrays generated in the home route.\r\n       Ex: red will give the shade of red present in the 50 array, 100 array,\r\n       200 array ... 900 array. */\r\n    gatherShades(){\r\n        let shades = [];\r\n\r\n        //create a new array w/ just the shade of the hue being viewed\r\n        for(let color in this.props.palette.colors){\r\n            shades.push(this.props.palette.colors[color].filter(\r\n                (c) => c.id === this.props.colorId)[0]);\r\n        }\r\n\r\n        /* get rid of first color since it is always white */\r\n        return shades.slice(1);\r\n    }\r\n\r\n    // updates what option is selected in dropdown menu showing hex/rgb/rbga\r\n    handleFormatChange(e){\r\n        this.setState({format : e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const colorBoxes = this._shades.map(c =>\r\n            <ColorBox key={c.name} \r\n            name={c.name} \r\n            color={c[this.state.format]}\r\n            activeMore={false} />)\r\n        return (\r\n            <div className={this.props.classes.SingleColorPalette}>\r\n                {/* create navbar without slider */}\r\n                <Navbar\r\n                handleFormatChange={this.handleFormatChange}\r\n                activeSlider={false}\r\n                format={this.state.format} />\r\n\r\n                {/* show colors and a go back link in the bottom right box */}\r\n                <div className=\"Palette-colors\">\r\n                    {colorBoxes}\r\n                    <div className={`${this.props.classes.goBack} ${this.props.classes.colorBox} `}>\r\n                        <Link to={`/palette/${this.props.palette.id}`} \r\n                        >Go Back</Link>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* display footer */}\r\n                <footer className=\"Palette-footer\">\r\n                    {this.props.palette.paletteName}\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SingleColorPalette);\r\n","import React, { Component } from 'react'\r\nimport Palette from './Palette';\r\nimport PaletteList from './PaletteList';\r\nimport './App.css';\r\nimport seedColors from './seedColors';\r\nimport NewPaletteForm from './NewPaletteForm';\r\nimport { generatePalette } from './colorHelpers';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport SingleColorPalette from './SingleColorPalette';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\r\n        this.state = { palettes : savedPalettes || seedColors }\r\n\r\n        this.savePalette = this.savePalette.bind(this);\r\n        this.findPalette = this.findPalette.bind(this);\r\n        this.deletePalette = this.deletePalette.bind(this);\r\n    }\r\n\r\n    /* Helper function used to get the color to generate a palette for\r\n       when clicking more. This returns the specific color and then\r\n       generatePalette will create the gradient for the color.\r\n     */\r\n    findPalette(id){\r\n        return this.state.palettes.find((palette) => palette.id === id);\r\n    }\r\n\r\n    savePalette(newPalette){\r\n        this.setState({palettes : [...this.state.palettes,newPalette]},\r\n            this.syncLocalStorage);\r\n    }\r\n\r\n    deletePalette(id){\r\n        this.setState(st => ({ palettes : st.palettes.filter(palette => palette.id !== id)}),\r\n            this.syncLocalStorage)\r\n    }\r\n\r\n    //saves palettes to local storage\r\n    syncLocalStorage(){\r\n        window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\r\n    }\r\n\r\n    render (){\r\n        return(\r\n        <div className=\"App\">\r\n            <Route render={({location}) => (\r\n                // Home route contains the list of palettes to view\r\n            <TransitionGroup>\r\n            <CSSTransition classNames='fade' timeout={400} key={location.key}>\r\n            <Switch location={location}>\r\n                <Route exact path=\"/\" render={(routeProps) => \r\n                <div className=\"page\">\r\n                    <PaletteList \r\n                    {...routeProps}\r\n                    deletePalette={this.deletePalette}\r\n                    palettes={this.state.palettes}/>\r\n                </div>\r\n                }/>\r\n\r\n                {/* Used to create new palette */}\r\n                <Route exact path=\"/palette/new\" render={(routeProps) => \r\n                    <div className=\"page\">\r\n                        <NewPaletteForm \r\n                        savePalette={this.savePalette}\r\n                        palettes={this.state.palettes}\r\n                        {...routeProps}/>\r\n                    </div>\r\n                    } />\r\n\r\n                {/* View of an individual palette */}\r\n                <Route exact path=\"/palette/:id\" \r\n                render={(routeProps) => \r\n                    <div className=\"page\">\r\n                        <Palette palette={generatePalette(\r\n                        this.findPalette(routeProps.match.params.id)\r\n                        )} />\r\n                    </div>\r\n                     }/>\r\n                \r\n                {/* View of all shades of a single color in a palette */}\r\n                <Route exact path=\"/palette/:paletteId/:color\"\r\n                render={(routeProps) => \r\n                    <div className=\"page\">\r\n                        <SingleColorPalette \r\n                        palette={generatePalette(\r\n                        this.findPalette(routeProps.match.params.paletteId)\r\n                        )}\r\n                        colorId={routeProps.match.params.color} />\r\n                    </div>\r\n                    } />\r\n\r\n                <Route render={(routeProps) => \r\n                <div className=\"page\">\r\n                    <PaletteList \r\n                    {...routeProps}\r\n                    deletePalette={this.deletePalette}\r\n                    palettes={this.state.palettes}/>\r\n                </div>\r\n                }/>\r\n            </Switch>\r\n            </CSSTransition>\r\n            </TransitionGroup>)}  />\r\n            \r\n        </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}